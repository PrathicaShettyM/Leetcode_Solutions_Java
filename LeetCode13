# Roman to Integer
# M1: Iterative method
# TC = O(n)
# SC = O(1)

class IterativeMethod{
    public static int val(char ch){
        if(ch == 'I') return 1;
        else if(ch == 'V') return 5;
        else if(ch == 'X') return 10;
        else if(ch == 'L') return 50;
        else if(ch == 'C') return 100;
        else if(ch == 'D') return 500; 
        else if(ch == 'M') return 1000;
        else return -1;
    }

    public static int romanToInt(String s) {

        int n = s.length();

        int sum = 0;
        
        for(int i = 0; i < n; i++){
            int ch1 = val(s.charAt(i));

            if(i+1 < n){ // get next char if it exists
                int ch2 = val(s.charAt(i+1));

                if(ch1 >= ch2){
                    sum += ch1;
                }
                else{
                    sum += (ch2-ch1);
                    i++;
                }
            }
            else{
                sum += ch1;
            }
        }

        return sum;
    }
    public static void main(String[] args) {
        String s = "MCM";
        int val = romanToInt(s);
        System.out.println(val);
    }
}


__________________*******_________________*****__________________

# M2: HashMaps
# TC = O(n)
# SC = O(1)

import java.util.HashMap;
public class RomanToInteger {
    public static int romanToInt(String s){
        HashMap<Character,Integer> map = new HashMap<>();
        map.put('I', 1);
        map.put('V', 5);
        map.put('X', 10);
        map.put('L', 50);
        map.put('C', 100);
        map.put('D', 500);
        map.put('M', 1000);

        int sum = 0;

        for(int i = 0; i < s.length(); i++){
            if(i+1 < s.length() && map.get(s.charAt(i)) < map.get(s.charAt(i+1))){
                sum += map.get(s.charAt(i+1)) - map.get(s.charAt(i));
                i++; // skip the current symbol
            }
            else sum += map.get(s.charAt(i));
        }

        return sum;
    }
    public static void main(String[] args) {
        String s = "MCM";
        int val = romanToInt(s);
        System.out.println(val);
    }
}
